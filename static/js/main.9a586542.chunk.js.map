{"version":3,"sources":["lookup/components.js","tweets/lookup.js","tweets/buttons.js","tweets/create.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/feed.js","tweets/list.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","followers_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","FeedList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetsList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","Boolean","hostname","appEl","getElementById","ReactDOM","render","StrictMode","createElement","tweetsEl","dataset","tweetsFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9a586542.chunk.js","sourcesContent":["function getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n          const cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n              break;\n          }\n      }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData\n  if (data) {\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()\n  const url = `http://localhost:8000/api${endpoint}`\n  xhr.responseType = \"json\"\n  const csrftoken = getCookie('csrftoken');\n  xhr.open(method, url)\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n  \n  if (csrftoken) {\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n  }\n    \n  xhr.onload = function() {\n    if (xhr.status === 403) {\n      const detail = xhr.response.detail\n      if(detail === \"Authentication credentials were not provided.\") {\n        if (window.location.href.indexOf(\"login\") === -1) {\n          window.location.href=\"/login?showLoginRequired=true\"\n        }\n      }\n    }\n    callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = function (e) {\n  //  console.log(\"error\", e)\n    callback({\"message\": \"This request was an error\"}, 400)\n  }\n  //console.log(jsonData)\n  xhr.send(jsonData)\n}\n\n","import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback) {\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\n  }\n\n\nexport function apiTweetAction(tweetId, action, callback) {\n    const data = {id: tweetId, action: action}\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n  }  \n\n  \nexport function apiTweetDetail(tweetId, callback) {\n  backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\n}\n\nexport function apiTweetFeed(callback, nextUrl) {\n  let endpoint = \"/tweets/feed/\"\n    if (nextUrl !== null && nextUrl !== undefined) {\n       endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }  \n    backendLookup(\"GET\", endpoint, callback)   \n  }\n\n  \nexport function apiTweetList(username, callback, nextUrl) {\n  let endpoint = \"/tweets/\"\n  if (username) {\n       endpoint = `/tweets/?username=${username}`\n      }\n    if (nextUrl !== null && nextUrl !== undefined) {\n       endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }  \n    backendLookup(\"GET\", endpoint, callback)   \n  }","import React from 'react'\n\nimport {apiTweetAction} from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n \n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n\n    const handleActionBackendEvent = (response, status) => {\n      console.log(response, status)\n        if ((status === 200 || status === 201) && didPerformAction) {\n          didPerformAction(response, status)\n        }     \n    }\n    \n    const handleClick = (event) => {\n        event.preventDefault()\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)      \n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n  }","import React from 'react'\nimport {apiTweetCreate} from './lookup'\n\nexport function TweetCreate(props) {\n  const textAreaRef = React.createRef()\n  const {didTweet} = props\n    const handleBackendUpdate = (response, status) => {\n      if (status === 201) {\n        didTweet(response)\n      } else {\n        console.log(response)\n        alert(\"An error occured please try again\")\n      }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newVal = textAreaRef.current.value \n        // backend api request\n        apiTweetCreate(newVal, handleBackendUpdate)        \n        textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n                <form onSubmit={handleSubmit}>\n                  <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'></textarea>\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n             </form>\n        </div>\n}\n\n\n","import React from 'react'\n\nexport function UserLink (props) {\n  const {username} = props\n  const handleUserLink = (event) => {\n    window.location.href=`/profile/${username}`\n  } \n  return <span className='pointer' onClick={handleUserLink}>\n    {props.children}\n  </span>\n}\n\nexport function UserDisplay(props) {\n  const {user, includeFullName, hideLink} = props\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}` : null\n\n  return <React.Fragment>\n    {nameDisplay}\n    {hideLink === true ? `@${user.username}` : <UserLink username={user.username}> @{user.username}</UserLink>} \n  </React.Fragment>  \n}\n\nexport function UserPicture (props) {\n  const {user, hideLink} = props\n  const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n  {user.username[0]}\n</span>\n  return hideLink === true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\n}","import React from 'react'\nimport numeral from 'numeral'\n\nexport function DisplayCount(props) {\n    return <span className={props.className}>\n            {numeral(props.children).format(\"0a\")}\n        </span> \n}","import React, {useState, useEffect} from 'react'\nimport numeral from 'numeral'\n\nimport {UserDisplay, UserPicture} from './components'\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup'\n\nimport {DisplayCount} from './utils'\n\nfunction ProfileBadge(props) {\n    const {user, didFollowToggle, profileLoading} = props\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb\n    const handleFollowingToggle = (event) => {        \n        event.preventDefault()\n        if (didFollowToggle && !profileLoading) {\n            didFollowToggle(currentVerb)\n        }\n    }\n    return user ? <div>\n         <UserPicture user={user} hideLink/>\n         <p><UserDisplay user={user} includeFullName hideLink/></p>\n         <p><DisplayCount>{user.followers_count}</DisplayCount> {user.followers_count === 1 ? 'follower' : 'followers' }</p>\n         <p><DisplayCount>{user.following_count}</DisplayCount> Following</p>\n         <p>{user.location}</p>\n         <p>{user.bio}</p>\n         <button className='btn btn-primary' onClick={handleFollowingToggle}>{currentVerb}</button>\n        </div> : null\n}\n\n\nexport function ProfileBadgeComponent (props) {\n    const {username} = props    \n    //lookup\n    const [didLookup, setDidLookup] = useState(false)\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n    const handleBackendLookup = (response, status) => {\n        if (status === 200) {\n          setProfile(response)\n        } \n    }\n    useEffect(() => {\n        if (didLookup === false) {\n        apiProfileDetail(username, handleBackendLookup)\n        setDidLookup(true)\n        }\n    }, [username, didLookup, setDidLookup])\n\n    const handleNewFollow = (actionVerb) => {\n        apiProfileFollowToggle(username, actionVerb, (response, status) => {\n    //   console.log(response, status)\n            if (status === 200) {\n                setProfile(response)\n                // apiProfileDetail(username, handleBackendLookup)\n            }\n            setProfileLoading(false)\n        })\n        setProfileLoading(true)\n    }\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading}/> : null\n}","import {backendLookup} from '../lookup'\n\nexport function apiProfileDetail(username, callback) {\n    backendLookup(\"GET\", `/profiles/${username}/`, callback)\n}\n\nexport function apiProfileFollowToggle(username, action, callback) {\n    const data = {action: `${action && action}`.toLowerCase()}\n    backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data)\n}    ","import React, {useState} from 'react'\n\nimport {ActionBtn} from './buttons'\n\nimport {UserDisplay, UserPicture} from '../profiles'\n\n\nexport function ParentTweet(props) {\n    const {tweet} = props\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\n   } \n  \n   export function Tweet(props) {\n      const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n      let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n      className = isRetweet === true ? `${className} p-2 border rounded` : className\n \n      const path = window.location.pathname\n      const match = path.match(/(?<tweetid>\\d+)/)\n      const urlTweetId = match ? match.groups.tweetid : -1\n      const isDetail = `${tweet.id}` === `${urlTweetId}`\n\n      const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n      }\n  \n      const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200) {\n          setActionTweet(newActionTweet)\n        } else if (status === 201) {\n           if (didRetweet) {\n             didRetweet(newActionTweet)\n           }\n        }\n      }\n  \n      return <div className={className}>\n        {isRetweet === true && <div className='mb-2'> \n         <span className=\"small muted text-secondary\">Retweet via <UserDisplay user={retweeter} /></span>\n        </div>}\n          <div className='d-flex'>\n            <div className=''>\n              <UserPicture user={tweet.user} />\n            </div>\n            <div className='col-11'>\n              <div>\n                <p>\n                  <UserDisplay includeFullName user={tweet.user} />\n                </p>\n                <p>{tweet.content}</p>\n                <ParentTweet tweet={tweet} retweeter={tweet.user} />\n              </div>\n          \n              <div className='btn btn-group px-0'>\n                {(actionTweet && hideActions !== true) && <React.Fragment>\n                      <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display: \"likes\"}} />\n                      <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display: \"unlike\"}} />\n                      <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display: \"Retweet\"}} />\n                    </React.Fragment>   \n                  }  \n                  {isDetail === true ? null : <button className='btn sm btn-outline-primary' onClick={handleLink}>View</button>}\n              </div>\n              </div> \n          </div>  \n      </div> \n    }\n  ","import React, {useEffect, useState} from 'react'\n\nimport {apiTweetFeed} from './lookup'\n\nimport {Tweet} from './detail'\n\nexport function FeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n    \n    useEffect(() => {\n      if (tweetsDidSet === false) {\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setTweetsInit(response.results)   \n            setTweetsDidSet(true)     \n          } \n        }\n        apiTweetFeed(handleTweetListLookup)\n     }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweetsInit(updateFinalTweets)\n    }\n\n    const handlLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handlLoadNextResponse = (response, status) => {\n            if (status === 200) {\n              setNextUrl(response.next)\n              const newTweets = [...tweets].concat(response.results)\n              setTweetsInit(newTweets)   \n              setTweets(newTweets)     \n            } \n        }\n        apiTweetFeed(handlLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index) => { \n      return <Tweet \n                tweet={item}\n                didRetweet={handleDidRetweet} \n                className=\"my-5 py-5 px-2 border rounded bg-white text-dark\" \n                key={`${index}-{item.id}`}/>\n      })}\n      { nextUrl !== null && <button onClick={handlLoadNext} className='btn btn-outline-primary'>Load next</button>}\n    </React.Fragment>\n}","import React, {useEffect, useState} from 'react'\n\nimport {apiTweetList} from './lookup'\n\nimport {Tweet} from './detail'\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n    \n    useEffect(() => {\n      if (tweetsDidSet === false) {\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setTweetsInit(response.results)   \n            setTweetsDidSet(true)     \n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleTweetListLookup)\n     }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweetsInit(updateFinalTweets)\n    }\n\n    const handlLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handlLoadNextResponse = (response, status) => {\n            if (status === 200) {\n              setNextUrl(response.next)\n              const newTweets = [...tweets].concat(response.results)\n              setTweetsInit(newTweets)   \n              setTweets(newTweets)     \n            } else {\n              alert(\"There was an real error\")\n            }\n        }\n        apiTweetList(props.username, handlLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index) => { \n      return <Tweet \n                tweet={item}\n                didRetweet={handleDidRetweet} \n                className=\"my-5 py-5 px-2 border rounded bg-white text-dark\" \n                key={`${index}-{item.id}`}/>\n      })}\n      { nextUrl !== null && <button onClick={handlLoadNext} className='btn btn-outline-primary'>Load next</button>}\n    </React.Fragment>\n}","import React, {useEffect, useState} from 'react'\n\nimport {TweetCreate} from './create'\nimport {Tweet} from './detail'\nimport {apiTweetDetail} from './lookup'\nimport {FeedList} from './feed'\nimport {TweetsList} from './list'\n\n\nexport function FeedComponent(props) {\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === \"false\" ? false : true \n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)        \n  }\n  return <div className={props.className}>\n             {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />} \n          <FeedList newTweets={newTweets} {...props} />\n    </div>\n}\n\nexport function TweetsComponent(props) {\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true \n    const handleNewTweet = (newTweet) => {\n      let tempNewTweets = [...newTweets]\n      tempNewTweets.unshift(newTweet)\n      setNewTweets(tempNewTweets)        \n    }\n    return <div className={props.className}>\n               {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />} \n            <TweetsList newTweets={newTweets} {...props} />\n      </div>\n}\n\nexport function TweetDetailComponent(props) {\n  const {tweetId} = props\n  const [didLookup, setDidLookup] = useState(false)\n  const [tweet, setTweet] = useState(null)\n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response)\n    } else {\n      alert(\"There was an error finding your tweet.\")\n    }\n  }\n\n  useEffect(() => {\n    if (didLookup === false) {\n      apiTweetDetail(tweetId, handleBackendLookup)\n     setDidLookup(true)\n    }\n  }, [tweetId, didLookup, setDidLookup])\n\n return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}\n\n\n  \n\n  \n ","import React from 'react';\nimport './App.css';\nimport {TweetsComponent} from './tweets'\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          <TweetsComponent />\n        </div>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ProfileBadgeComponent} from './profiles'\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets'\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl =  document.getElementById('root')\nif (appEl) {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n    appEl\n    );\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"tweets-me2\")\nif (tweetsEl) {\n  ReactDOM.render(\n    e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\n\nconst tweetsFeedEl = document.getElementById(\"tweets-me2-feed\")\nif (tweetsFeedEl) {\n  ReactDOM.render(\n    e(FeedComponent, tweetsFeedEl.dataset), tweetsFeedEl);\n}\n\n\n\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-3-detail\")\n\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset),\n    container);\n\n})\n\n\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-3-profile-badge\")\n\nuserProfileBadgeElements.forEach(container => {\n  ReactDOM.render(\n    e(ProfileBadgeComponent, container.dataset),\n    container);\n\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}